{"version":3,"sources":["Components/tellContacts/contactsList/ContactsList.module.css","redux/tellContactsAction.js","redux/tellContactsSelectors.js","Components/tellContacts/contactsForm/ContactsForm.js","Components/tellContacts/contactsList/ContactsList.js","Components/tellContacts/telContactFilter/TelContactFilter.js","Components/tellContacts/TellContacts.js","redux/tellContactsOperations.js","Components/main/Main.js","Components/App.js","redux/tellContactsReducer.js","redux/store.js","index.js","Components/tellContacts/contactsForm/TelContacts.module.css"],"names":["module","exports","getAllContacts","createAction","addContacts","deleteContacts","filterContacts","setContactsLoading","setError","resetError","getContactsSelector","state","items","errorContactsSelector","error","loaderContactsSelector","isContactLoding","filterContactsSelector","filter","getFilterContacts","createSelector","contacts","contact","name","toLowerCase","includes","number","ContactsForm","onHandleSubmit","e","preventDefault","props","checkDublicateName","alert","addTelContact","setState","onHandleChange","target","value","className","style","contact_form","onSubmit","this","form_label","form_input","type","pattern","title","required","onChange","form_button","Component","connect","ContactsList","telNumbers","deleteTelContact","list","map","telNumber","list_item","list_button","onClick","id","TelContactFilter","setFilter","propTepes","PropTypes","func","isRequired","string","TellContacts","a","addContactsOperation","deleteContactsOperation","some","getAllClientsOperation","isLoading","filteredContacts","mapDispatchToProps","dispatch","axios","get","data","Object","keys","key","response","post","delete","Main","App","itemsReducer","createReducer","_","payload","filterContactsReducer","contactsLoaderReducer","contactErrorReducer","contactReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.516ecb93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__TYo8H\",\"list_item\":\"ContactsList_list_item__1dTvg\",\"list_button\":\"ContactsList_list_button__MZa34\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getAllContacts = createAction(\"tellContacts/getAllContacts\");\nexport const addContacts = createAction(\"tellContacts/addContacts\");\nexport const deleteContacts = createAction(\"tellContacts/deleteContacts\");\nexport const filterContacts = createAction(\"tellContacts/filterContacts\");\n\nexport const setContactsLoading = createAction(\"tellContacts/setContactsLoading\");\nexport const setError = createAction(\"tellContacts/setError\");\n\nexport const resetError = createAction(\"tellContacts/resetError\");\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContactsSelector = state => state.items;\nconst errorContactsSelector = state => state.error;\nconst loaderContactsSelector = state => state.isContactLoding;\nconst filterContactsSelector = state => state.filter;\n\nconst getFilterContacts = createSelector(\n  [getContactsSelector, filterContactsSelector],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact => contact.name.toLowerCase().includes(filter.toLowerCase()) || contact.number.includes(filter)\n    );\n  }\n);\n\nexport { getContactsSelector, errorContactsSelector, loaderContactsSelector, filterContactsSelector, getFilterContacts};\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport style from '../contactsForm/TelContacts.module.css'\nimport { connect } from \"react-redux\";\nimport { resetError } from \"../../../redux/tellContactsAction\";\nimport { errorContactsSelector } from \"../../../redux/tellContactsSelectors\";\n\nclass ContactsForm extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n    filter: \"\",\n    number: \"\"\n  };\n\n  onHandleSubmit = e => {\n    e.preventDefault();\n    if (this.props.checkDublicateName(this.state.name)) {\n            alert(`${this.state.name} already exist`)\n            return\n        } \n    this.props.addTelContact(this.state);\n    this.setState({\n      contacts: [],\n      name: \"\",\n      filter: \"\",\n      number: \"\"\n    });\n  };\n  \n\n  onHandleChange = e => {\n     this.props.error && this.props.resetError();\n    const {name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n  render() {\n    return (\n      <form className={style.contact_form} onSubmit={this.onHandleSubmit}>\n        <label className={style.form_label}>\n          Name:{\" \"}\n          <input className={style.form_input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.onHandleChange}\n            value={this.state.name}\n          />\n        </label>\n        <label className={style.form_label}>\n          Number:\n          <input className={style.form_input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.onHandleChange}\n            value={this.state.number}\n          />\n        </label>\n        <button className={style.form_button} type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    error: errorContactsSelector(state)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { resetError }\n)(ContactsForm);\n\n\nContactsForm.propTypes = {\n  addTelContact: PropTypes.func.isRequired,\n  state: PropTypes.shape({\n    contacts: PropTypes.array.isRequired,\n    name: PropTypes.string.isRequired,\n    filter: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  })\n}\n","import React from 'react'\nimport PropsTypes from 'prop-types'\nimport style from '../contactsList/ContactsList.module.css'\n\nconst ContactsList = ({telNumbers, deleteTelContact }) => (\n    <ul className={style.list}>\n        { telNumbers.map(telNumber =>\n        (<li className={style.list_item} key={telNumber.id}>\n            <p>{telNumber.name}: </p>\n            <p>{telNumber.number}</p>\n             <button className={style.list_button} type=\"button\" onClick={deleteTelContact} id={telNumber.id}>Delete</button>\n            </li>\n    ))}    \n    </ul>\n)\n       \nexport default ContactsList;\n\nContactsList.propTypes = {\n    deleteTelContact: PropsTypes.func.isRequired,\n    telNumbers: PropsTypes.array.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from '../contactsForm/TelContacts.module.css'\n\nconst TelContactFilter = ({filter, setFilter}) => {\n    return (\n        <label className={style.form_label}> \n        Find contacts by name\n        <input className={style.form_input} type=\"text\" value={filter} onChange={setFilter}/>\n       </label>\n    );\n}\n\nexport default TelContactFilter;\n\nTelContactFilter.propTepes = {\n    setFilter: PropTypes.func.isRequired,\n    filter: PropTypes.string.isRequired\n}","import React, { Component } from \"react\";\nimport ContactsForm from \"./contactsForm/ContactsForm\";\nimport ContactsList from \"./contactsList/ContactsList\";\nimport TelContactFilter from \"./telContactFilter/TelContactFilter\";\nimport { connect } from \"react-redux\";\nimport { addContactsOperation, deleteContactsOperation, getAllClientsOperation } from \"../../redux/tellContactsOperations\";\nimport { filterContacts } from \"../../redux/tellContactsAction\";\nimport { errorContactsSelector, filterContactsSelector, getContactsSelector, loaderContactsSelector, getFilterContacts } from \"../../redux/tellContactsSelectors\";\n\nclass TellContacts extends Component {\n  async componentDidMount() {\n    this.props.getAllClientsOperation();\n  }\n\n  addContacts = async contact => {\n    this.props.addContactsOperation(contact);\n  };\n\n  deleteContacts = async e => {\n    const { id } = e.target;\n    this.props.deleteContactsOperation(id);\n  };\n\n  checkDublicateName = name => {\n    return this.props.contacts.some(contact => contact.name === name);\n  };\n\n  setFilter = e => {\n    const { value } = e.target;\n    this.props.filterContacts(value);\n  };\n \n  render() {\n    return (\n      <>\n        {this.props.error && <h2>{this.props.error}</h2>}\n        {this.props.isLoading && <h2>Loading....</h2>}\n        <h2>Phonebook</h2>\n        <ContactsForm addTelContact={this.addContacts} checkDublicateName={this.checkDublicateName}/>\n        <h2>Contacts</h2>\n        <TelContactFilter filter={this.props.filter} setFilter={this.setFilter} />\n\n        <ContactsList telNumbers={this.props.filteredContacts} deleteTelContact={this.deleteContacts} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getContactsSelector(state),\n    isLoading: loaderContactsSelector(state),\n    error: errorContactsSelector(state),\n    filter: filterContactsSelector(state),\n    filteredContacts: getFilterContacts(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  getAllClientsOperation,\n  addContactsOperation,\n  deleteContactsOperation,\n  filterContacts\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TellContacts);\n","import axios from \"axios\";\nimport { addContacts, deleteContacts, getAllContacts, setContactsLoading, setError } from \"./tellContactsAction\";\n\nconst addContactsOperation = contact => async dispatch => {\n  dispatch(setContactsLoading());\n  try {\n    const { data } = await axios.post(`https://tel-contacts-default-rtdb.firebaseio.com/tellContacts.json`, contact);\n    dispatch(addContacts({ ...contact, id: data.name }));\n  } catch (error) {\n    dispatch(setError(error.response.data.error));\n  } finally {\n    dispatch(setContactsLoading());\n  }\n};\n\nconst deleteContactsOperation = id => async dispatch => {\n  dispatch(setContactsLoading());\n  try {\n    await axios.delete(`https://tel-contacts-default-rtdb.firebaseio.com/tellContacts/${id}.json`);\n    dispatch(deleteContacts(id));\n  } catch (error) {\n    dispatch(setError(error.response.data.error));\n  } finally {\n    dispatch(setContactsLoading());\n  }\n};\n\nconst getAllClientsOperation = () => async dispatch => {\n  dispatch(setContactsLoading());\n  try {\n    const { data } = await axios.get(`https://tel-contacts-default-rtdb.firebaseio.com/tellContacts.json`);\n    if (data) {\n      const contacts = Object.keys(data).map(key => ({\n        id: key,\n        ...data[key]\n      }));\n      dispatch(getAllContacts(contacts));\n    }\n  } catch (error) {\n    dispatch(setError(error.response.data.error));\n  } finally {\n    dispatch(setContactsLoading());\n  }\n};\n\nexport { addContactsOperation, deleteContactsOperation, getAllClientsOperation };\n","import React from 'react'\nimport TellContacts from '../tellContacts/TellContacts';\n\nconst Main = () => {\n    return (\n    <>\n     <TellContacts />\n    </>\n    );\n}\n\nexport default Main;","import React from 'react'\nimport Main from './main/Main';\n\nconst App = () => {\n    return (\n    <>\n    <Main />\n    </>\n    );\n}\n\nexport default App;","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport { getAllContacts, addContacts, deleteContacts, filterContacts, setContactsLoading, setError, resetError } from \"./tellContactsAction\";\n\nconst itemsReducer = createReducer([], {\n  [getAllContacts]: (_, { payload }) => payload,\n  [addContacts]: (state, { payload }) => [...state, payload],\n  [deleteContacts]: (state, { payload }) => [...state.filter(contact => contact.id !== payload)]\n});\n\n const filterContactsReducer = createReducer(\"\", {\n  [filterContacts]: (_, { payload }) => payload\n});\n\nconst contactsLoaderReducer = createReducer(false, {\n  [setContactsLoading]: state => !state\n});\n\nconst contactErrorReducer = createReducer(\"\", {\n  [setError]: (_, { payload }) => payload,\n  [resetError]: () => \"\"\n});\n\nexport const contactReducer = combineReducers({\n  items: itemsReducer,\n  isContactLoding: contactsLoaderReducer,\n  error: contactErrorReducer,\n  filter: filterContactsReducer\n});\n\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport { contactReducer } from \"./tellContactsReducer\";\n\nconst store = configureStore({\n  reducer: contactReducer,\n  middleware: [...getDefaultMiddleware()]\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App'\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n        <App />\n      </BrowserRouter>\n  </Provider>,  \n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"TelContacts_contact_form__Cu-U9\",\"form_label\":\"TelContacts_form_label__2Ppbc\",\"form_input\":\"TelContacts_form_input__zFh_L\",\"form_button\":\"TelContacts_form_button__3ZGRn\"};"],"sourceRoot":""}